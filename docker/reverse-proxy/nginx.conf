user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {

	include /etc/nginx/mime.types;
	# default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /etc/nginx/ssl/inception.crt;
	ssl_certificate_key /etc/nginx/ssl/inception.key;
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	upstream frontend_upstream {
		server frontend:3000;
	}
	upstream backend_upstream {
		server backend:3001;
	}
	upstream backend_game_upstream {
		server backend_game:3003;
	}

	server {
		listen 80 ;
		listen 443 ssl;
		server_name _;

		location / {
			proxy_pass http://frontend_upstream;
			
			# tout ca c'est pour le hot reload
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_cache_bypass $http_upgrade;
			
		}
		
		location /api {
			proxy_pass http://backend_upstream;
			
			#socket io
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-NginX-Proxy false;
			proxy_redirect off;
			
			# tout ca c'est pour le hot reload
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_cache_bypass $http_upgrade;
		}

		location /game/api {
			proxy_pass http://backend_game_upstream;
			
			#socket io
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-NginX-Proxy false;
			proxy_redirect off;
			
			# tout ca c'est pour le hot reload
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_cache_bypass $http_upgrade;
			
		}
	}

	# server {

	# 	listen 80 ;
	# 	server_name _;

	# 	return 301 https://$host:4000;
	# }
}
